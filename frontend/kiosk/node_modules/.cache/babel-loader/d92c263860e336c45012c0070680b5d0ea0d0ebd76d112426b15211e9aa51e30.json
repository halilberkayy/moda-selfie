{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport api from \"../api/axios\";\nexport const useVirtualTryOn = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [resultImage, setResultImage] = useState(null);\n  const tryOnClothing = useCallback(async (photoData, clothingType) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      // Base64 string'i Blob'a çevir\n      const base64Data = photoData.split(\",\")[1];\n      const blob = await fetch(photoData).then(res => res.blob());\n\n      // FormData oluştur\n      const formData = new FormData();\n      formData.append(\"file\", blob, \"photo.jpg\");\n      if (clothingType) {\n        formData.append(\"clothing_type\", clothingType);\n      }\n\n      // API isteği\n      const response = await api.post(\"/api/virtual-tryon\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        responseType: \"blob\"\n      });\n\n      // Blob'u URL'e çevir\n      const imageUrl = URL.createObjectURL(response.data);\n      setResultImage(imageUrl);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : \"Virtual try-on işlemi başarısız oldu\";\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  const resetResult = useCallback(() => {\n    if (resultImage) {\n      URL.revokeObjectURL(resultImage); // URL'i temizle\n    }\n    setResultImage(null);\n    setError(null);\n  }, [resultImage]);\n  return {\n    isLoading,\n    error,\n    resultImage,\n    tryOnClothing,\n    resetResult\n  };\n};\n_s(useVirtualTryOn, \"MaIH2O9gcVkA8LiocE2vwThW/9E=\");\nexport default useVirtualTryOn;","map":{"version":3,"names":["useState","useCallback","api","useVirtualTryOn","_s","isLoading","setIsLoading","error","setError","resultImage","setResultImage","tryOnClothing","photoData","clothingType","base64Data","split","blob","fetch","then","res","formData","FormData","append","response","post","headers","responseType","imageUrl","URL","createObjectURL","data","err","errorMessage","Error","message","resetResult","revokeObjectURL"],"sources":["/Users/halilberkaysahin/Desktop/bombaaaa/smart-mirror/frontend/kiosk/src/hooks/useVirtualTryOn.ts"],"sourcesContent":["import { useState, useCallback } from \"react\";\nimport api from \"../api/axios\";\n\ninterface UseVirtualTryOnReturn {\n  isLoading: boolean;\n  error: string | null;\n  resultImage: string | null;\n  tryOnClothing: (photoData: string, clothingType?: string) => Promise<void>;\n  resetResult: () => void;\n}\n\nexport const useVirtualTryOn = (): UseVirtualTryOnReturn => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [resultImage, setResultImage] = useState<string | null>(null);\n\n  const tryOnClothing = useCallback(async (photoData: string, clothingType?: string) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // Base64 string'i Blob'a çevir\n      const base64Data = photoData.split(\",\")[1];\n      const blob = await fetch(photoData).then((res) => res.blob());\n      \n      // FormData oluştur\n      const formData = new FormData();\n      formData.append(\"file\", blob, \"photo.jpg\");\n      if (clothingType) {\n        formData.append(\"clothing_type\", clothingType);\n      }\n\n      // API isteği\n      const response = await api.post(\"/api/virtual-tryon\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n        responseType: \"blob\",\n      });\n\n      // Blob'u URL'e çevir\n      const imageUrl = URL.createObjectURL(response.data);\n      setResultImage(imageUrl);\n    } catch (err) {\n      const errorMessage = err instanceof Error \n        ? err.message \n        : \"Virtual try-on işlemi başarısız oldu\";\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const resetResult = useCallback(() => {\n    if (resultImage) {\n      URL.revokeObjectURL(resultImage); // URL'i temizle\n    }\n    setResultImage(null);\n    setError(null);\n  }, [resultImage]);\n\n  return {\n    isLoading,\n    error,\n    resultImage,\n    tryOnClothing,\n    resetResult,\n  };\n};\n\nexport default useVirtualTryOn;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,OAAOC,GAAG,MAAM,cAAc;AAU9B,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAA6B;EAAAC,EAAA;EAC1D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAgB,IAAI,CAAC;EACvD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EAEnE,MAAMW,aAAa,GAAGV,WAAW,CAAC,OAAOW,SAAiB,EAAEC,YAAqB,KAAK;IACpFP,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF;MACA,MAAMM,UAAU,GAAGF,SAAS,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC1C,MAAMC,IAAI,GAAG,MAAMC,KAAK,CAACL,SAAS,CAAC,CAACM,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC;;MAE7D;MACA,MAAMI,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEN,IAAI,EAAE,WAAW,CAAC;MAC1C,IAAIH,YAAY,EAAE;QAChBO,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAET,YAAY,CAAC;MAChD;;MAEA;MACA,MAAMU,QAAQ,GAAG,MAAMrB,GAAG,CAACsB,IAAI,CAAC,oBAAoB,EAAEJ,QAAQ,EAAE;QAC9DK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,YAAY,EAAE;MAChB,CAAC,CAAC;;MAEF;MACA,MAAMC,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACN,QAAQ,CAACO,IAAI,CAAC;MACnDpB,cAAc,CAACiB,QAAQ,CAAC;IAC1B,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZ,MAAMC,YAAY,GAAGD,GAAG,YAAYE,KAAK,GACrCF,GAAG,CAACG,OAAO,GACX,sCAAsC;MAC1C1B,QAAQ,CAACwB,YAAY,CAAC;IACxB,CAAC,SAAS;MACR1B,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM6B,WAAW,GAAGlC,WAAW,CAAC,MAAM;IACpC,IAAIQ,WAAW,EAAE;MACfmB,GAAG,CAACQ,eAAe,CAAC3B,WAAW,CAAC,CAAC,CAAC;IACpC;IACAC,cAAc,CAAC,IAAI,CAAC;IACpBF,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC,EAAE,CAACC,WAAW,CAAC,CAAC;EAEjB,OAAO;IACLJ,SAAS;IACTE,KAAK;IACLE,WAAW;IACXE,aAAa;IACbwB;EACF,CAAC;AACH,CAAC;AAAC/B,EAAA,CAzDWD,eAAe;AA2D5B,eAAeA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}