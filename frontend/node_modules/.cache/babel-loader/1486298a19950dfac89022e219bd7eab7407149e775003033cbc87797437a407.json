{"ast":null,"code":"var _jsxFileName = \"/Users/halilberkaysahin/Desktop/sonlara geldik/moda-aynasi/frontend/src/components/WeatherDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../utils/api';\nimport LoadingSpinner from './LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherDisplay({\n  onWeatherLoaded\n}) {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getWeather = async position => {\n      try {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        const response = await api.get(`/weather?lat=${lat}&lon=${lon}`);\n        setWeather(response.data);\n        onWeatherLoaded(response.data);\n        setError(null);\n      } catch (err) {\n        setError('Hava durumu alınamadı. Lütfen tekrar deneyin.');\n        console.error('Weather error:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (\"geolocation\" in navigator) {\n      setLoading(true);\n      navigator.geolocation.getCurrentPosition(getWeather, err => {\n        setError('Konum bilgisi alınamadı. Lütfen konum erişimine izin verin.');\n        setLoading(false);\n        console.error('Geolocation error:', err);\n      });\n    } else {\n      setError('Tarayıcınız konum özelliğini desteklemiyor.');\n    }\n  }, [onWeatherLoaded]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n  if (!weather) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-4 rounded shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-bold mb-2\",\n      children: \"Hava Durumu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"S\\u0131cakl\\u0131k: \", weather.temperature, \" \\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Nem: \", weather.humidity, \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"R\\xFCzgar: \", weather.wind_speed, \" m/s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherDisplay, \"tdEYlhX11LZJZgvGdhbV2CGZOQM=\");\n_c = WeatherDisplay;\nexport default WeatherDisplay;\nvar _c;\n$RefreshReg$(_c, \"WeatherDisplay\");","map":{"version":3,"names":["React","useEffect","useState","api","LoadingSpinner","jsxDEV","_jsxDEV","WeatherDisplay","onWeatherLoaded","_s","weather","setWeather","loading","setLoading","error","setError","getWeather","position","lat","coords","latitude","lon","longitude","response","get","data","err","console","navigator","geolocation","getCurrentPosition","fileName","_jsxFileName","lineNumber","columnNumber","className","children","temperature","humidity","wind_speed","_c","$RefreshReg$"],"sources":["/Users/halilberkaysahin/Desktop/sonlara geldik/moda-aynasi/frontend/src/components/WeatherDisplay.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '../utils/api';\nimport LoadingSpinner from './LoadingSpinner';\n\nfunction WeatherDisplay({ onWeatherLoaded }) {\n  const [weather, setWeather] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getWeather = async (position) => {\n      try {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        const response = await api.get(`/weather?lat=${lat}&lon=${lon}`);\n        setWeather(response.data);\n        onWeatherLoaded(response.data);\n        setError(null);\n      } catch (err) {\n        setError('Hava durumu alınamadı. Lütfen tekrar deneyin.');\n        console.error('Weather error:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (\"geolocation\" in navigator) {\n      setLoading(true);\n      navigator.geolocation.getCurrentPosition(\n        getWeather,\n        (err) => {\n          setError('Konum bilgisi alınamadı. Lütfen konum erişimine izin verin.');\n          setLoading(false);\n          console.error('Geolocation error:', err);\n        }\n      );\n    } else {\n      setError('Tarayıcınız konum özelliğini desteklemiyor.');\n    }\n  }, [onWeatherLoaded]);\n\n  if (loading) {\n    return <LoadingSpinner />;\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n        {error}\n      </div>\n    );\n  }\n\n  if (!weather) {\n    return null;\n  }\n\n  return (\n    <div className=\"bg-white p-4 rounded shadow-md\">\n      <h2 className=\"text-lg font-bold mb-2\">Hava Durumu</h2>\n      <p>Sıcaklık: {weather.temperature} °C</p>\n      <p>Nem: {weather.humidity} %</p>\n      <p>Rüzgar: {weather.wind_speed} m/s</p>\n    </div>\n  );\n}\n\nexport default WeatherDisplay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}